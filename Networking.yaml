Description: >
    This template deploys a VPC, with a pair of public and private subnets spread 
    across two Availabilty Zones. It deploys an Internet Gateway, with a default 
    route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ), 
    and default routes for them in the private subnets.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VpcCIDR: 
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String

    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
        Type: String

    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String

    PrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
        Type: String

    SecureSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String

    SecureSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
        Type: String

    StackName:
        Description: Stack name of the parent stack
        Type: String

Resources:

    VPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Ref EnvironmentName
            
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC

    SecureNetworkAcl:
        Type: "AWS::EC2::NetworkAcl"
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: SecureNetworkAcl

    NACLEntryAllowInboundPrivateSubnet1:
        Type: "AWS::EC2::NetworkAclEntry"
        Properties: 
            CidrBlock: !Ref PrivateSubnet1CIDR
            Egress: false
            NetworkAclId:
                Ref: SecureNetworkAcl
            PortRange:
                From: 3306
                To: 3306
            Protocol: 6
            RuleAction : allow
            RuleNumber : 100

    NACLEntryAllowOutboundPrivateSubnet1:
        Type: "AWS::EC2::NetworkAclEntry"
        Properties: 
            CidrBlock: !Ref PrivateSubnet1CIDR
            Egress: true
            NetworkAclId:
                Ref: SecureNetworkAcl
            PortRange:
                From: 3306
                To: 3306
            Protocol: 6
            RuleAction : allow
            RuleNumber : 100                                

    NACLEntryAllowInboundPrivateSubnet2:
        Type: "AWS::EC2::NetworkAclEntry"
        Properties: 
            CidrBlock: !Ref PrivateSubnet2CIDR
            Egress: false
            NetworkAclId:
                Ref: SecureNetworkAcl
            PortRange:
                From: 3306
                To: 3306
            Protocol: 6
            RuleAction : allow
            RuleNumber : 101

    NACLEntryAllowOutboundPrivateSubnet2:
        Type: "AWS::EC2::NetworkAclEntry"
        Properties: 
            CidrBlock: !Ref PrivateSubnet2CIDR
            Egress: true
            NetworkAclId:
                Ref: SecureNetworkAcl
            PortRange:
                From: 3306
                To: 3306
            Protocol: 6
            RuleAction : allow
            RuleNumber : 101                              

    PublicSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: Public Subnet 1 (AZ1)

    PublicSubnet2: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: Public Subnet 2 (AZ2)

    PrivateSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: Private Subnet 1 (AZ1)

    PrivateSubnet2: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: Private Subnet 2 (AZ2)

    SecureSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref SecureSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: Secure Subnet 1 (AZ1)

    SecureSubnet2: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref SecureSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: Secure Subnet 2 (AZ2)

    SecureSubnet1NACLAssociation:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId:
                Ref: SecureSubnet1
            NetworkAclId:
                Ref: SecureNetworkAcl

    SecureSubnet2NACLAssociation:
        Type: "AWS::EC2::SubnetNetworkAclAssociation"
        Properties:
            SubnetId:
                Ref: SecureSubnet2
            NetworkAclId:
                Ref: SecureNetworkAcl

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties: 
            Domain: vpc

    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc

    NatGateway1: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PublicSubnet1

    NatGateway2: 
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway2EIP.AllocationId
            SubnetId: !Ref PublicSubnet2

    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: Public Routes

    DefaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PublicRouteTable
            SubnetId: !Ref PublicSubnet2
    
    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: Private Routes (AZ1)

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet1

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref PrivateSubnet2

Outputs: 

    VpcId: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
            Name: !Join [ ':', [ !Ref 'StackName', 'VpcId' ] ]

    PublicSubnet1:
        Description: A reference to the public subnet in the 1st Availability Zone
        Value: !Ref PublicSubnet1
        Export:
            Name: !Join [ ':', [ !Ref 'StackName', 'PublicSubnet1' ] ]

    PublicSubnet2: 
        Description: A reference to the public subnet in the 2nd Availability Zone
        Value: !Ref PublicSubnet2
        Export:
            Name: !Join [ ':', [ !Ref 'StackName', 'PublicSubnet2' ] ]        

    PrivateSubnet1:
        Description: A reference to the private subnet in the 1st Availability Zone
        Value: !Ref PrivateSubnet1
        Export:
            Name: !Join [ ':', [ !Ref 'StackName', 'PrivateSubnet1' ] ]

    PrivateSubnet2: 
        Description: A reference to the private subnet in the 2nd Availability Zone
        Value: !Ref PrivateSubnet2   
        Export:
            Name: !Join [ ':', [ !Ref 'StackName', 'PrivateSubnet2' ] ]

    SecureSubnet1:
        Description: A reference to the private subnet in the 1st Availability Zone
        Value: !Ref SecureSubnet1
        Export:
            Name: !Join [ ':', [ !Ref 'StackName', 'SecureSubnet1' ] ]

    SecureSubnet2: 
        Description: A reference to the private subnet in the 2nd Availability Zone
        Value: !Ref SecureSubnet2
        Export:
            Name: !Join [ ':', [ !Ref 'StackName', 'SecureSubnet2' ] ]              